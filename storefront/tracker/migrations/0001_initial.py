# Generated by Django 5.1.7 on 2025-05-25 22:56

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('type', models.CharField(choices=[('income', 'Income'), ('expense', 'Expense')], max_length=20)),
                ('color', models.CharField(default='#3498db', max_length=7)),
            ],
            options={
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='Business',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('business_type', models.CharField(choices=[('retail', 'Retail Store'), ('food', 'Food Vendor'), ('market', 'Market Trader'), ('service', 'Service Provider')], max_length=100)),
                ('location', models.CharField(max_length=200)),
                ('phone', models.CharField(max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('owner', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='MLModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model_type', models.CharField(choices=[('profit_prediction', 'Profit Prediction'), ('loss_detection', 'Loss Pattern Detection'), ('demand_forecast', 'Demand Forecasting'), ('price_optimization', 'Price Optimization')], max_length=30)),
                ('version', models.CharField(max_length=20)),
                ('accuracy', models.FloatField(default=0.0)),
                ('precision', models.FloatField(default=0.0)),
                ('recall', models.FloatField(default=0.0)),
                ('f1_score', models.FloatField(default=0.0)),
                ('model_file', models.FileField(blank=True, null=True, upload_to='ml_models/')),
                ('training_data_count', models.IntegerField(default=0)),
                ('is_active', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'unique_together': {('model_type', 'version')},
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_type', models.CharField(choices=[('sale', 'Sale'), ('expense', 'Expense'), ('loss', 'Loss/Wastage')], max_length=20)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('description', models.TextField()),
                ('input_method', models.CharField(choices=[('manual', 'Manual Entry'), ('voice', 'Voice Input'), ('photo', 'Photo Scan'), ('api', 'API Integration')], default='manual', max_length=20)),
                ('quantity', models.FloatField(blank=True, null=True)),
                ('unit_price', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('supplier', models.CharField(blank=True, max_length=200)),
                ('customer_type', models.CharField(blank=True, max_length=50)),
                ('location', models.CharField(blank=True, max_length=200)),
                ('weather', models.CharField(blank=True, max_length=50)),
                ('day_of_week', models.IntegerField(default=0)),
                ('hour_of_day', models.IntegerField(default=12)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('business', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='tracker.business')),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='tracker.category')),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='PhotoReceipt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='receipts/')),
                ('processed', models.BooleanField(default=False)),
                ('raw_text', models.TextField(blank=True)),
                ('extracted_data', models.JSONField(default=dict)),
                ('amount_confidence', models.FloatField(default=0.0)),
                ('vendor_confidence', models.FloatField(default=0.0)),
                ('date_confidence', models.FloatField(default=0.0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('business', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tracker.business')),
                ('created_transactions', models.ManyToManyField(blank=True, to='tracker.transaction')),
            ],
        ),
        migrations.CreateModel(
            name='AIInsight',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('insight_type', models.CharField(choices=[('wastage', 'Wastage Pattern'), ('timing', 'Timing Optimization'), ('pricing', 'Pricing Strategy'), ('inventory', 'Inventory Management'), ('cost', 'Cost Optimization'), ('revenue', 'Revenue Opportunity')], max_length=20)),
                ('severity', models.CharField(choices=[('low', 'Low Priority'), ('medium', 'Medium Priority'), ('high', 'High Priority'), ('critical', 'Critical')], max_length=10)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('potential_savings', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('potential_revenue', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('confidence_score', models.FloatField(default=0.0)),
                ('is_active', models.BooleanField(default=True)),
                ('is_read', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('business', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ai_insights', to='tracker.business')),
                ('related_transactions', models.ManyToManyField(blank=True, to='tracker.transaction')),
            ],
            options={
                'ordering': ['-created_at', '-severity'],
            },
        ),
        migrations.CreateModel(
            name='VoiceInput',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('audio_file', models.FileField(blank=True, null=True, upload_to='voice_inputs/')),
                ('transcribed_text', models.TextField()),
                ('confidence', models.FloatField(default=0.0)),
                ('processed', models.BooleanField(default=False)),
                ('extracted_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('extracted_type', models.CharField(blank=True, max_length=20)),
                ('extracted_description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('business', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tracker.business')),
                ('created_transaction', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='tracker.transaction')),
            ],
        ),
        migrations.CreateModel(
            name='BusinessMetrics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('total_revenue', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('total_expenses', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('total_profit', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('total_transactions', models.IntegerField(default=0)),
                ('avg_transaction_value', models.DecimalField(decimal_places=2, default=0, max_digits=8)),
                ('profit_margin', models.FloatField(default=0.0)),
                ('wastage_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('wastage_percentage', models.FloatField(default=0.0)),
                ('risk_score', models.FloatField(default=5.0)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('business', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='metrics', to='tracker.business')),
            ],
            options={
                'ordering': ['-date'],
                'unique_together': {('business', 'date')},
            },
        ),
        migrations.CreateModel(
            name='ProfitPrediction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prediction_date', models.DateField()),
                ('predicted_revenue', models.DecimalField(decimal_places=2, max_digits=10)),
                ('predicted_expenses', models.DecimalField(decimal_places=2, max_digits=10)),
                ('predicted_profit', models.DecimalField(decimal_places=2, max_digits=10)),
                ('revenue_low', models.DecimalField(decimal_places=2, max_digits=10)),
                ('revenue_high', models.DecimalField(decimal_places=2, max_digits=10)),
                ('weather_factor', models.FloatField(default=1.0)),
                ('seasonal_factor', models.FloatField(default=1.0)),
                ('event_factor', models.FloatField(default=1.0)),
                ('trend_factor', models.FloatField(default=1.0)),
                ('model_accuracy', models.FloatField(default=0.0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('business', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='predictions', to='tracker.business')),
            ],
            options={
                'ordering': ['prediction_date'],
                'unique_together': {('business', 'prediction_date')},
            },
        ),
    ]
